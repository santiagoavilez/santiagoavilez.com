---
// Learn about using Astro layouts:
// https://docs.astro.build/en/core-concepts/layouts/

// Component Imports

import MainHead from "../components/MainHead.astro";
import Nav from "../components/Nav.astro";
import Footer from "../components/Footer.astro";
import "aos/dist/aos.css"; // You can also use <link> for styles
// ..

import Icon, { type Props as IconProps } from "../components/Icon.astro";

const iconLinks: { label: string; href: string; icon: IconProps["icon"] }[] = [
  {
    label: "LinkedIn",
    href: "https://linkedin.com/in/santiago-avilez-ariza/",
    icon: "linkedin",
  },
  {
    label: "Instagram",
    href: "https://www.instagram.com/santiago.avilez.dev/",
    icon: "instagram",
  },
  {
    label: "Tiktok",
    href: "https://www.tiktok.com/@santiago.avilez.dev",
    icon: "tiktok",
  },
  {
    label: "GitHub",
    href: "https://github.com/santiagoavilez",
    icon: "github-logo",
  },
];

interface Props {
  title?: string | undefined;
  description?: string | undefined;
}

const { title, description } = Astro.props;
---

<html lang="en" class="scroll-smooth">
  <head>
    <MainHead title={title} description={description} />
  </head>
  <body>
    <script is:inline src="https://unpkg.com/aos@next/dist/aos.js"></script>
    <script is:inline>
      AOS.init({
        easing: "ease-in",
        delay: 100,
        once: true,
        mirror: true,
        duration: 450,
      });
    </script>

    <div class="flex flex-col ">
      <Nav />
      <aside
        class="hidden absolute lg:flex flex-col w-10 top-[450px] lg:text-3xl xl:text-4xl pl-2 xl:pl-10 gap-5 left-0"
      >
        {
          iconLinks.map(({ href, icon, label }) => (
            <a
              href={href}
              class="social  text-gray-400 hover:text-cerulean-600 z-10 hover:z-30 transition-all duration-200 transform hover:scale-110 w-full"
              target="_blank"
              rel="noopener noreferrer"
            >
              <span class="sr-only nav">{label}</span>
              <Icon class="nav" icon={icon} />
            </a>
          ))
        }
      </aside>
      <slot />

      <Footer />
    </div>

    <script>
      // Add “loaded” class once the document has completely loaded.
      addEventListener("load", () => {
        document.documentElement.classList.add("loaded");
      });
    </script>
  </body>
</html>
