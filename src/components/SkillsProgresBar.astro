---
import ProgressBar from "./ProgressBar.astro";
---

<div class="gap-8 sm:grid sm:grid-cols-2">
    <div>
        <ProgressBar width="80%" title="TypeScript" />
        <ProgressBar width="78%" title="Html y CSS" />
        <ProgressBar width="72%" title="Next.js" />
        <ProgressBar width="72%" title="React js" />
    </div>
    <div>
        <ProgressBar width="60%" title="Tailwind CSS" />
        <ProgressBar width="68%" title="Node.js" />
        <ProgressBar width="75%" title="Laravel y PHP" />
        <ProgressBar width="55%" title="DevOps" />
    </div>
</div>


<script>
    const observer = new IntersectionObserver((entries) => {
        // We will fill in the callback later...
        entries.forEach((entry) => {
            const progressbar = entry.target as HTMLElement;
            let animate = false;
            if (entry.isIntersecting && !animate) {
                progressbar.style.width = progressbar.dataset.width!;
                progressbar.classList.add("animate-progress");

                animate = true;
                return; // if we added the class, exit the function
            }
            // We're not intersecting, so remove the class!
        });
    });
    // Tell the observer which elements to track
    const bar = document.querySelectorAll(".progress").forEach((bar) => {
        if (bar) observer.observe(bar);
    });
</script>